{% extends 'base.html.twig' %}

{% block title %}Exnet - Marketplace de Módulos{% endblock %}

{% block head %}
    {{ parent() }}
    <style>
        .module-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .module-card {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            position: relative;
            overflow: hidden;
        }
        
        .module-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.2);
        }
        
        .premium-badge {
            position: absolute;
            top: 10px;
            right: 10px;
            background: linear-gradient(135deg, #f6d365 0%, #fda085 100%);
            color: #333;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: bold;
        }
        
        .installed-badge {
            position: absolute;
            top: 10px;
            right: 10px;
            background: linear-gradient(135deg, #84fab0 0%, #8fd3f4 100%);
            color: #333;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: bold;
        }
        
        .module-icon {
            font-size: 2rem;
            margin-bottom: 15px;
            color: #8fd3f4;
        }
        
        .module-title {
            font-size: 1.25rem;
            margin-bottom: 10px;
            color: white;
        }
        
        .module-version {
            font-size: 0.85rem;
            color: rgba(255, 255, 255, 0.6);
            margin-bottom: 15px;
        }
        
        .module-description {
            color: rgba(255, 255, 255, 0.8);
            margin-bottom: 20px;
            font-size: 0.9rem;
        }
        
        .category-title {
            color: white;
            font-size: 1.5rem;
            margin: 30px 0 15px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            padding-bottom: 10px;
        }
        
        .category-subtitle {
            color: white;
            font-size: 1.2rem;
            margin: 15px 0 10px;
            padding-left: 10px;
            border-left: 3px solid rgba(135, 206, 235, 0.7);
        }
        
        .license-form {
            display: none;
            margin-top: 15px;
        }
        
        .license-input {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 4px;
            color: white;
        }
        
        .alert {
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        
        .alert-danger {
            background-color: rgba(220, 53, 69, 0.2);
            color: #f8d7da;
            border: 1px solid rgba(220, 53, 69, 0.3);
        }
        
        .loader {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: white;
            animation: spin 1s linear infinite;
            margin-right: 10px;
            vertical-align: middle;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
    </style>
{% endblock %}

{% block body %}
    <div class="exnet-container-transparent">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="exnet-section-title mb-0">Marketplace de Módulos</h2>
            <a href="{{ path('modulos_index') }}" class="exnet-btn exnet-btn-outline-light">
                <i class="fas fa-arrow-left me-2"></i> Volver a Módulos
            </a>
        </div>
        <p class="mb-4">Explora y añade nuevos módulos a tu instancia de Exnet</p>
        
        {% if error is defined and error %}
            <div class="alert alert-danger">
                <i class="fas fa-exclamation-circle me-2"></i> {{ error }}
            </div>
        {% endif %}
        
        <div id="marketplace-container">
            <div class="d-flex justify-content-center p-5">
                <div class="loader"></div>
                <span>Cargando módulos disponibles...</span>
            </div>
        </div>
    </div>
{% endblock %}

{% block imports %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            loadModules();
            
            function loadModules() {
                fetch('/api/modulos/marketplace')
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            renderModules(data.marketplace);
                        } else {
                            showError(data.error || 'No se pudieron cargar los módulos');
                        }
                    })
                    .catch(error => {
                        showError('Error al conectar con el servidor: ' + error);
                    });
            }
            
            function showError(message) {
                const container = document.getElementById('marketplace-container');
                container.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-circle me-2"></i> ${message}
                    </div>
                    <div class="text-center mt-4">
                        <button class="exnet-btn exnet-btn-outline-light" onclick="window.location.reload()">
                            <i class="fas fa-sync me-2"></i> Reintentar
                        </button>
                    </div>
                `;
            }
            
            function formatCategoryName(category) {
                if (category.startsWith('modulo')) {
                    const name = category.replace('modulo', '');
                    return 'Módulo ' + name.charAt(0).toUpperCase() + name.slice(1);
                }
                return category.charAt(0).toUpperCase() + category.slice(1);
            }
            
            function renderModules(marketplace) {
                const container = document.getElementById('marketplace-container');
                container.innerHTML = '';
                
                if (Object.keys(marketplace).length === 0) {
                    container.innerHTML = `
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i> No hay módulos disponibles en este momento.
                        </div>
                    `;
                    return;
                }
                
                const installedModules = [];
                const availableModules = {};
                
                for (const category in marketplace) {
                    const modules = marketplace[category];
                    if (modules.length === 0) continue;
                    
                    modules.forEach(module => {
                        if (module.installed) {
                            const exists = installedModules.some(m => 
                                m.name.toLowerCase() === module.name.toLowerCase() ||
                                m.name.toLowerCase() === 'modulo' + module.name.toLowerCase()
                            );
                            
                            if (!exists) {
                                installedModules.push({...module, category});
                            }
                        } else {
                            if (!availableModules[category]) {
                                availableModules[category] = [];
                            }
                            availableModules[category].push(module);
                        }
                    });
                }
                
                if (installedModules.length > 0) {
                    const installedTitle = document.createElement('h3');
                    installedTitle.className = 'category-title';
                    installedTitle.textContent = 'Módulos Instalados';
                    container.appendChild(installedTitle);
                    
                    const installedInfo = document.createElement('p');
                    installedInfo.className = 'text-white-50 mb-4';
                    installedInfo.textContent = 'Estos módulos ya están instalados en tu sistema.';
                    container.appendChild(installedInfo);
                    
                    const installedGrid = document.createElement('div');
                    installedGrid.className = 'module-grid';
                    
                    installedModules.forEach(module => {
                        installedGrid.appendChild(createModuleCard(module, module.category));
                    });
                    
                    container.appendChild(installedGrid);
                }
                
                if (Object.keys(availableModules).length > 0) {
                    const availableTitle = document.createElement('h3');
                    availableTitle.className = 'category-title mt-5';
                    availableTitle.textContent = 'Módulos Disponibles';
                    container.appendChild(availableTitle);
                    
                    for (const category in availableModules) {
                        const modules = availableModules[category];
                        if (modules.length === 0) continue;
                        
                        const categoryTitle = document.createElement('h4');
                        categoryTitle.className = 'category-subtitle';
                        categoryTitle.textContent = formatCategoryName(category);
                        container.appendChild(categoryTitle);
                        
                        const moduleGrid = document.createElement('div');
                        moduleGrid.className = 'module-grid';
                        
                        modules.forEach(module => {
                            moduleGrid.appendChild(createModuleCard(module, category));
                        });
                        
                        container.appendChild(moduleGrid);
                    }
                }
            }
            
            function createModuleCard(module, category) {
                const card = document.createElement('div');
                card.className = 'module-card';
                
                if (module.price === 'premium') {
                    const premiumBadge = document.createElement('span');
                    premiumBadge.className = 'premium-badge';
                    premiumBadge.innerHTML = '<i class="fas fa-crown me-1"></i> Premium';
                    card.appendChild(premiumBadge);
                }
                
                if (module.installed) {
                    const installedBadge = document.createElement('span');
                    installedBadge.className = 'installed-badge';
                    installedBadge.innerHTML = '<i class="fas fa-check me-1"></i> Instalado';
                    card.appendChild(installedBadge);
                }
                
                card.innerHTML += `
                    <div class="module-icon">
                        <i class="fas fa-puzzle-piece"></i>
                    </div>
                    <h4 class="module-title">${module.name}</h4>
                    <div class="module-version">v${module.version}</div>
                    <p class="module-description">${module.description}</p>
                `;
                
                if (!module.installed) {
                    const installButton = document.createElement('button');
                    installButton.className = 'exnet-btn exnet-btn-blue w-100';
                    installButton.innerHTML = '<i class="fas fa-download me-2"></i> Instalar';
                    
                    if (module.price === 'premium') {
                        installButton.onclick = function() {
                            toggleLicenseForm(this, module, category);
                        };
                    } else {
                        installButton.onclick = function() {
                            installModule(module, category);
                        };
                    }
                    
                    card.appendChild(installButton);
                    
                    if (module.price === 'premium') {
                        const licenseForm = document.createElement('div');
                        licenseForm.className = 'license-form';
                        licenseForm.innerHTML = `
                            <input type="text" class="license-input" placeholder="Introduce tu clave de licencia" />
                            <button class="exnet-btn exnet-btn-green w-100 mt-2 verify-license-btn">
                                <i class="fas fa-key me-2"></i> Verificar licencia
                            </button>
                        `;
                        
                        const verifyButton = licenseForm.querySelector('.verify-license-btn');
                        verifyButton.onclick = function() {
                            const licenseKey = licenseForm.querySelector('.license-input').value.trim();
                            if (licenseKey) {
                                verifyLicense(licenseKey, module, category);
                            }
                        };
                        
                        card.appendChild(licenseForm);
                    }
                }
                
                return card;
            }
            
            function toggleLicenseForm(button, module, category) {
                const card = button.closest('.module-card');
                const licenseForm = card.querySelector('.license-form');
                
                if (licenseForm.style.display === 'block') {
                    licenseForm.style.display = 'none';
                    button.innerHTML = '<i class="fas fa-download me-2"></i> Instalar';
                } else {
                    licenseForm.style.display = 'block';
                    button.innerHTML = '<i class="fas fa-times me-2"></i> Cancelar';
                }
            }
            
            function verifyLicense(licenseKey, module, category) {
                fetch('/api/modulos/verify-license', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        licenseKey: licenseKey,
                        moduleFilename: module.filename
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.valid) {
                        installModule(module, category, data.downloadToken);
                    } else {
                        showError(data.message || 'Licencia inválida');
                    }
                })
                .catch(error => {
                    showError('Error al verificar la licencia: ' + error);
                });
            }
            
function installModule(module, category, downloadToken = null) {
    const container = document.getElementById('marketplace-container');
    container.innerHTML = `
        <div class="d-flex justify-content-center p-5 flex-column align-items-center">
            <div class="loader" style="width: 40px; height: 40px; margin-bottom: 20px;"></div>
            <h4 class="text-white mb-3">Instalando módulo ${module.name}</h4>
            <p class="text-white-50">Este proceso puede tardar unos minutos. No cierres esta página.</p>
        </div>
    `;
    
    fetch('/api/modulos/install', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            moduleType: category,
            filename: module.filename,
            downloadToken: downloadToken
        })
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(data => {
                throw new Error(data.message || `Error HTTP: ${response.status}`);
            });
        }
        return response.json();
    })
    .then(data => {
        if (data.success) {
            const commandFailed = data.commandSuccess === false;
            
            let resultMessage = `
                <div class="d-flex justify-content-center p-5 flex-column align-items-center">
                    <i class="fas fa-${commandFailed ? 'exclamation-triangle text-warning' : 'check-circle text-success'}" 
                       style="font-size: 40px; margin-bottom: 20px;"></i>
                    <h4 class="text-white mb-3">
                        ${commandFailed ? '⚠️ Módulo instalado con advertencias' : '✅ Módulo instalado correctamente!'}
                    </h4>
                    <p class="text-white-50">${data.message}</p>
            `;
            
            if (data.commandOutput) {
                resultMessage += `
                    <div class="mt-4 p-3 bg-dark rounded w-100">
                        <h5 class="text-white d-flex align-items-center">
                            <span class="badge ${commandFailed ? 'bg-danger' : 'bg-success'} me-2">
                                ${commandFailed ? 'Error' : 'Éxito'}
                            </span>
                            Resultado del comando de instalación:
                        </h5>
                        <div class="bg-black p-2 rounded" style="max-height: 200px; overflow-y: auto;">
                            <pre class="${commandFailed ? 'text-danger' : 'text-light'} mb-0" style="white-space: pre-wrap;">${data.commandOutput}</pre>
                        </div>
                    </div>
                `;
            }
            
            resultMessage += `
                <div class="d-flex gap-3 mt-4">
                    <button class="exnet-btn exnet-btn-blue" onclick="window.location.href='/modulos'">
                        <i class="fas fa-list me-2"></i> Ver módulos instalados
                    </button>
                    ${commandFailed ? `
                        <button class="exnet-btn exnet-btn-outline-light" onclick="window.location.reload()">
                            <i class="fas fa-sync me-2"></i> Volver a marketplace
                        </button>
                    ` : ''}
                </div>
            </div>
            `;
            
            container.innerHTML = resultMessage;
            
            if (!commandFailed) {
                setTimeout(() => {
                    window.location.href = '/modulos';
                }, 5000);
            }
        } else {
            let errorMessage = `
                <div class="d-flex justify-content-center p-5 flex-column align-items-center">
                    <i class="fas fa-times-circle text-danger" style="font-size: 40px; margin-bottom: 20px;"></i>
                    <h4 class="text-white mb-3">❌ Error al instalar el módulo</h4>
                    <p class="text-white-50">${data.message || 'Se produjo un error durante la instalación'}</p>
            `;
            
            if (data.commandOutput) {
                errorMessage += `
                    <div class="mt-4 p-3 bg-dark rounded w-100">
                        <h5 class="text-white">Detalles del error:</h5>
                        <div class="bg-black p-2 rounded" style="max-height: 200px; overflow-y: auto;">
                            <pre class="text-danger mb-0" style="white-space: pre-wrap;">${data.commandOutput}</pre>
                        </div>
                    </div>
                `;
            }
            
            errorMessage += `
                <button class="exnet-btn exnet-btn-outline-light mt-4" onclick="window.location.reload()">
                    <i class="fas fa-sync me-2"></i> Reintentar
                </button>
            </div>
            `;
            
            container.innerHTML = errorMessage;
        }
    })
    .catch(error => {
        console.error('Error en la instalación:', error);
        
        container.innerHTML = `
            <div class="d-flex justify-content-center p-5 flex-column align-items-center">
                <i class="fas fa-times-circle text-danger" style="font-size: 40px; margin-bottom: 20px;"></i>
                <h4 class="text-white mb-3">Error de conexión</h4>
                <p class="text-white-50">No se pudo conectar con el servidor para instalar el módulo: ${error.message}</p>
                <button class="exnet-btn exnet-btn-outline-light mt-4" onclick="window.location.reload()">
                    <i class="fas fa-sync me-2"></i> Reintentar
                </button>
            </div>
        `;
    });
}
        });
    </script>
{% endblock %}