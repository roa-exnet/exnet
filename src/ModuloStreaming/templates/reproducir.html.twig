{% extends 'base.html.twig' %}

{% block title %}Reproductor - {{ video.titulo }} - Exnet{% endblock %}

{% block head %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/moduloStreaming/css/streaming.css') }}">
{% endblock %}

{% block navbar %}
{% endblock %}

{% block body %}
<div class="player-container">
    <div class="video-header">
        <div class="title-info">
            <div class="video-title">{{ video.titulo }}</div>
            <div class="video-meta">
                {% if video.tipo == 'serie' and video.temporada %}
                    Temporada {{ video.temporada }}, Episodio {{ video.episodio }}
                {% else %}
                    {{ video.tipo|capitalize }}
                {% endif %}
                
                {% if video.anio %}
                    • {{ video.anio }}
                {% endif %}
            </div>
        </div>
        <a href="{{ path('streaming_video_detalle', {id: video.id}) }}" class="exnet-btn-small">
            <i class="fas fa-times"></i>
        </a>
    </div>
    
    <div class="player-wrapper">
        {% if video.url %}
            <video id="videoPlayer" controls autoplay>
                <source src="{{ video.url }}" type="video/mp4">
                Tu navegador no soporta la reproducción de video.
            </video>
        {% else %}
            <div class="fallback-message">
                <h2>No hay URL de video disponible</h2>
                <p>Este contenido no tiene una URL de video configurada.</p>
                <a href="{{ path('streaming_video_detalle', {id: video.id}) }}" class="exnet-btn-blue mt-3">
                    Volver al detalle
                </a>
            </div>
        {% endif %}
    </div>
</div>
{% endblock %}

{% block imports %}
    {{ parent() }}
    <script>
        // Guardar posición de reproducción cuando el usuario cierre o navegue a otra página
        const videoPlayer = document.getElementById('videoPlayer');
        
        if (videoPlayer) {
            // Recuperar posición guardada si existe
            const savedTime = localStorage.getItem('videoTime_{{ video.id }}');
            if (savedTime) {
                videoPlayer.currentTime = parseFloat(savedTime);
            }
            
            // Guardar posición actual cada 5 segundos
            setInterval(() => {
                localStorage.setItem('videoTime_{{ video.id }}', videoPlayer.currentTime);
            }, 5000);
            
            // También guardar al salir de la página
            window.addEventListener('beforeunload', () => {
                localStorage.setItem('videoTime_{{ video.id }}', videoPlayer.currentTime);
            });
            
            // Marcar como completado si llega al final
            videoPlayer.addEventListener('ended', () => {
                localStorage.removeItem('videoTime_{{ video.id }}');
                localStorage.setItem('videoComplete_{{ video.id }}', 'true');
            });
        }

        // Agregar clase al body para estilos específicos de la página de reproductor
        document.body.classList.add('video-player-page');
    </script>
{% endblock %}